LinkedList* clone() 
    { 
        // Initialize two references, 
        // one with original list's head. 
        Node *origCurr = head; 
        Node *cloneCurr = NULL; 
   
        unordered_map<Node*, Node*> mymap; 
        // Traverse the original list and 
        // make a copy of that in the  
        // clone linked list. 
        while (origCurr != NULL) 
        { 
            cloneCurr = new Node(origCurr->data); 
            mymap[origCurr] = cloneCurr; 
            origCurr = origCurr->next; 
        } 
  
        // Adjusting the original list  
        // reference again. 
        origCurr = head; 
  
        // Traversal of original list again 
        // to adjust the next and random  
        // references of clone list using  
        // hash map. 
        while (origCurr != NULL) 
        { 
            cloneCurr = mymap[origCurr]; 
            cloneCurr->next = mymap[origCurr->next]; 
            cloneCurr->random = mymap[origCurr->random]; 
            origCurr = origCurr->next; 
        } 
  
        // return the head reference of  
        // the clone list. 
        return new LinkedList(mymap[head]); 
    } 
