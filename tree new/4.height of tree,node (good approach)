#include<bits/stdc++.h>
using namespace std;
struct Tree{
    int data;
    Tree *left;
    Tree *right;
    Tree(int x)
    {
        data=x;
        left=right=NULL;
    }
};
void preorder(Tree *root)
{
    if(root)
    {
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
    }
}
int height(Tree *root)
{
    int lefth,righth;
    if(root==NULL)
    {
        return 0;
    }
    else
    {
        lefth=height(root->left);
        righth=height(root->right);
        if(lefth>righth)
        return lefth+1;
        else
        return righth+1;
    }
}
Tree *search(Tree *root,int x)
{
    if(root)
    {
       // cout<<root->data<<" ";
    if(root->data==x)
    {
    return root;
    }
     search(root->left,x);
    search(root->right,x);
    }
   
}
main()
{
    Tree *p=new Tree(1);
    p->left=new Tree(2);
    p->right=new Tree(3);
    p->left->left=new Tree(4);
    p->left->right=new Tree(5);
    p->left->right->right=new Tree(6);
    preorder(p);
    cout<<"\nheight of a given tree:";
    int h=height(p);
    cout<<h;
    cout<<"\nheight of a node:";
    cout<<"\nenter a node value:";
    int x;
    cin>>x;
    Tree *q=search(p,x);
    if(q==NULL)
    cout<<"\nelement not found!!";
    else
    {
    h=height(q);
    cout<<"\nheight of "<<x<<" is:";
    cout<<h;
    }
    
}
