class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int S) {
         ios_base::sync_with_stdio(false); 
        cin.tie(NULL);
        cout.tie(NULL);
        long sum = accumulate(nums.begin(),nums.end(),0);
        long s1 = (sum+S)/2;
        int n = nums.size();
        vector<vector<int>> mat(n+1,vector<int>(sum+1,0));
       if(S > sum || (sum + S) % 2 == 1)   return 0;
            mat[0][0] = 1;
        for(int i = 1;i<=n;i++)
        {
            for(int j = 0;j<=s1;j++)
            {
                if(nums[i-1] > j)
                    mat[i][j] = mat[i-1][j];
                else
                    mat[i][j] = mat[i-1][j] + mat[i-1][j-nums[i-1]];
            }
        }
        return mat[n][s1];
    }
};
