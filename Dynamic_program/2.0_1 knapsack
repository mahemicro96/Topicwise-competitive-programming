method:1(using recursion)(TLE PROBLEM)
-------------------------------
#include<iostream>
#include<vector>
#include<list>
#include<algorithm>
using namespace std;
int knapsack(vector<int>wt,vector<int>val,int cap,int n)
{
    if(n==0||cap==0)
    return 0;
    if(wt[n-1]<=cap)
    {
        return max(val[n-1]+knapsack(wt,val,cap-wt[n-1],n-1),knapsack(wt,val,cap,n-1));
    }
    else if(wt[n-1]>cap)
    {
        return knapsack(wt,val,cap,n-1);
    }
}
main()
{
    int x;cin>>x;
    while(x--)
    {
    int n,cap;
    cin>>n>>cap;
    vector<int>val(n);
    vector<int>wt(n);
    for(int i=0;i<n;i++)
    cin>>val[i];
    for(int i=0;i<n;i++)
    cin>>wt[i];
    cout<<knapsack(wt,val,cap,n)<<endl;
        
    }
}
