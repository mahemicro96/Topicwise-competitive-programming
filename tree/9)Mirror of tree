a)symmetric tree
bool ismirror(struct Node* r1,struct Node* r2)
{
    if(r1==NULL&&r2==NULL)
    return true;
    if(r1==NULL||r2==NULL)
    return false;
    if(r1->key!=r2->key)
    return false;
    return ismirror(r1->left,r2->right)&&ismirror(r1->right,
    r2->left);
}
bool isSymmetric(struct Node* root)
{
	if(ismirror(root->left,root->right))
	return true;
	return false;
}
----------------
b)mirror checking b/w 2 trees
int areMirror(Node* a, Node* b) 
{ 
    /* Base case : Both empty */
    if (a==NULL && b==NULL) 
        return true; 
  
    // If only one is empty 
    if (a==NULL || b == NULL) 
        return false; 
  
    /* Both non-empty, compare them recursively 
     Note that in recursive calls, we pass left 
     of one tree and right of other tree */
    return  a->data == b->data && 
            areMirror(a->left, b->right) && 
            areMirror(a->right, b->left); 
} 
