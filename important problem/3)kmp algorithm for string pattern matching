implementation of strstr:(string pattern matching )

class Solution {
public:
    int strStr(string s, string pat) {
        int m = s.size(), n = pat.size();
        for (int i = 0; i <= m-n; i++) {
            int j = 0;
            for (; j < n; j++) {
                if (s[i + j] != pat[j]) {
                    break;
                }
            }
            if (j == n) {
                return i;
            }
        }
        return -1;
    }
};
-------------------------
efficient approach:



step:
1.understand the pattern by creating lps array using pattern string
2.find pattern existence using lps array and given string and given pattern

vector<int> pattern_analysis(string pat)
{
int m=pat.length();
int i=1,j=0;
vector<int>lps(m,0);
	while(i<m)
	{
		if(pat[i]==pat[j])
		{
			lps[i]=j+1;
			i++;
			j++;
		}
		else if(j>0)
		{
		 j=lps[j-1];
		}
		else{
			lps[i]=0;
			i++;
		}
	}
	return lps;
}



int pattern_match(string s,string p)
{
	vector<int> lps=pattern_analysis(p);
	int i=0,j=0;
	int n=s.length();
	int m=p.length();
	while(i<n)
	{
		if(s[i]==p[j])
		{
			if(j==m-1)
			{
			cout<<"pattern found at:"<<i-j<<endl;
			}
			else{
			i++;
			j++;
			}
		}
		else if(j>0)
		{
		j=lps[j-1];}
		else{
		i++;}
	}
}

	
