// C++ program to print all subarrays 
// in the array which has sum 0 
#include <bits/stdc++.h> 
using namespace std; 

// Function to print all subarrays in the array which 
// has sum 0 
vector< pair<int, int> > findSubArrays(int arr[], int n) 
{ 
	// create an empty map 
	unordered_map<int, vector<int> > map; 
	vector <pair<int, int>> out; 
	int sum = 0; 

	for (int i = 0; i < n; i++) 
	{ 
		sum += arr[i]; 
		if (sum == 0)
           out.push_back(make_pair(0, i)); 
		if (map.find(sum) != map.end()) 
		{ 
			vector<int> vc = map[sum]; 
			for (auto it = vc.begin(); it != vc.end(); it++) 
				out.push_back(make_pair(*it + 1, i)); 
		} 
		map[sum].push_back(i); 
	} 
	return out; 
} 

// Utility function to print all subarrays with sum 0 
void print(vector<pair<int, int>> out) 
{ 
	for (auto it = out.begin(); it != out.end(); it++) 
		cout << "Subarray found from Index " << 
			it->first << " to " << it->second << endl; 
} 

// Driver code 
int main() 
{ 
	int arr[] = {-1,-1,1,1,-1}; 
	int n = sizeof(arr)/sizeof(arr[0]); 

	vector<pair<int, int> > out = findSubArrays(arr, n); 

	// if we didn’t find any subarray with 0 sum, 
	// then subarray doesn’t exists 
	if (out.size() == 0) 
		cout << "No subarray exists"; 
	else
		print(out); 

	return 0; 
} 
